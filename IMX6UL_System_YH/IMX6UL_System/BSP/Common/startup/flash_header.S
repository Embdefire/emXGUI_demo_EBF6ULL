

//#ifdef	CONFIG_FLASH_HEADER
#if 1


#define	TEXT_BASE	 __text_base
#define	_end_of_copy 0x80300000 //__text_end

//#define	CONFIG_FLASH_HEADER_OFFSET 0x0000
#define	CONFIG_FLASH_HEADER_OFFSET 0x0400 //for SD Boot

#define	IOMUXC_BASE_ADDR	0x020E0000
#define	MMDC_P0_BASE_ADDR	0x021B0000
#define	MMDC_P1_BASE_ADDR	0x021B4000


#define CPU_2_BE_32(l) \
       ((((l) & 0x000000FF) << 24) | \
		(((l) & 0x0000FF00) << 8)  | \
		(((l) & 0x00FF0000) >> 8)  | \
		(((l) & 0xFF000000) >> 24))

#define MXC_DCD_ITEM( addr, val)   \
        .word CPU_2_BE_32(addr) ;  \
        .word CPU_2_BE_32(val)  ;  \


	.section  .flasheader,"ax",%progbits


	.org	CONFIG_FLASH_HEADER_OFFSET

ivt_header:       .word 0x402000D1 /* Tag=0xD1, Len=0x0020, Ver=0x40 */
app_code_jump_v:  .word __start
reserv1:          .word 0x0
dcd_ptr:          .word dcd_hdr
boot_data_ptr:	  .word boot_data
self_ptr:         .word ivt_header
app_code_csf:     .word 0x0
reserv2:          .word 0x0

boot_data:        .word 0x80000000 //TEXT_BASE
image_len:        .word 0x00400000 //_end_of_copy  - TEXT_BASE + CONFIG_FLASH_HEADER_OFFSET
plugin:           .word 0x0


dcd_hdr:			//.word CPU_2_BE_32(0xD201E840) //0x40E801D2 /* Tag=0xD2, Len=60*8 + 4 + 4, Ver=0x40 */
				  .byte 0xD2
				  .byte (dcd_data_end-dcd_hdr)>>8
				  .byte	(dcd_data_end-dcd_hdr)&0xFF
				  .byte 0x40

write_dcd_cmd:    //.word CPU_2_BE_32(0xCC01E404) //0x04E401CC /* Tag=0xCC, Len=60*8 + 4, Param=0x04 */
				  .byte 0xCC
				  .byte (dcd_data_end-write_dcd_cmd)>>8
				  .byte	(dcd_data_end-write_dcd_cmd)&0xFF
				  .byte 0x04


/* DCD */
MXC_DCD_ITEM( 0x020c4068, 0xffffffff)
MXC_DCD_ITEM( 0x020c406c, 0xffffffff)
MXC_DCD_ITEM( 0x020c4070, 0xffffffff)
MXC_DCD_ITEM( 0x020c4074, 0xffffffff)
MXC_DCD_ITEM( 0x020c4078, 0xffffffff)
MXC_DCD_ITEM( 0x020c407c, 0xffffffff)
MXC_DCD_ITEM( 0x020c4080, 0xffffffff)
MXC_DCD_ITEM( 0x020E04B4, 0x000C0000)
MXC_DCD_ITEM( 0x020E04AC, 0x00000000)
MXC_DCD_ITEM( 0x020E027C, 0x00000030)
MXC_DCD_ITEM( 0x020E0250, 0x00000030)
MXC_DCD_ITEM( 0x020E024C, 0x00000030)
MXC_DCD_ITEM( 0x020E0490, 0x00000030)
MXC_DCD_ITEM( 0x020E0288, 0x00000030)
MXC_DCD_ITEM( 0x020E0270, 0x00000000)
MXC_DCD_ITEM( 0x020E0260, 0x00000030)
MXC_DCD_ITEM( 0x020E0264, 0x00000030)
MXC_DCD_ITEM( 0x020E04A0, 0x00000030)
MXC_DCD_ITEM( 0x020E0494, 0x00020000)
MXC_DCD_ITEM( 0x020E0280, 0x00000030)
MXC_DCD_ITEM( 0x020E0284, 0x00000030)
MXC_DCD_ITEM( 0x020E04B0, 0x00020000)
MXC_DCD_ITEM( 0x020E0498, 0x00000030)
MXC_DCD_ITEM( 0x020E04A4, 0x00000030)
MXC_DCD_ITEM( 0x020E0244, 0x00000030)
MXC_DCD_ITEM( 0x020E0248, 0x00000030)
MXC_DCD_ITEM( 0x021B001C, 0x00008000)
MXC_DCD_ITEM( 0x021B0800, 0xA1390003)
MXC_DCD_ITEM( 0x021B080C, 0x00000000)
MXC_DCD_ITEM( 0x021B083C, 0x41570155)
MXC_DCD_ITEM( 0x021B0848, 0x4040474A)
MXC_DCD_ITEM( 0x021B0850, 0x40405550)
MXC_DCD_ITEM( 0x021B081C, 0x33333333)
MXC_DCD_ITEM( 0x021B0820, 0x33333333)
MXC_DCD_ITEM( 0x021B082C, 0xf3333333)
MXC_DCD_ITEM( 0x021B0830, 0xf3333333)
MXC_DCD_ITEM( 0x021B08C0, 0x00921012)
MXC_DCD_ITEM( 0x021B08b8, 0x00000800)
MXC_DCD_ITEM( 0x021B0004, 0x0002002D)
MXC_DCD_ITEM( 0x021B0008, 0x1B333030)
MXC_DCD_ITEM( 0x021B000C, 0x676B52F3)
MXC_DCD_ITEM( 0x021B0010, 0xB66D0B63)
MXC_DCD_ITEM( 0x021B0014, 0x01FF00DB)
MXC_DCD_ITEM( 0x021B0018, 0x00201740)
MXC_DCD_ITEM( 0x021B001C, 0x00008000)
MXC_DCD_ITEM( 0x021B002C, 0x000026D2)
MXC_DCD_ITEM( 0x021B0030, 0x006B1023)
MXC_DCD_ITEM( 0x021B0040, 0x0000004F)
MXC_DCD_ITEM( 0x021B0000, 0x84180000)
MXC_DCD_ITEM( 0x021B0890, 0x23400A38)
MXC_DCD_ITEM( 0x021B001C, 0x02008032)
MXC_DCD_ITEM( 0x021B001C, 0x00008033)
MXC_DCD_ITEM( 0x021B001C, 0x00048031)
MXC_DCD_ITEM( 0x021B001C, 0x15208030)
MXC_DCD_ITEM( 0x021B001C, 0x04008040)
MXC_DCD_ITEM( 0x021B0020, 0x00000800)
MXC_DCD_ITEM( 0x021B0818, 0x00000227)
MXC_DCD_ITEM( 0x021B0004, 0x0002552D)
MXC_DCD_ITEM( 0x021B0404, 0x00011006)
MXC_DCD_ITEM( 0x021B001C, 0x00000000)
dcd_data_end:
	.word	0
//////////////////////////////////////



#endif
